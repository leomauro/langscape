#  This file is automatically generated; change it on your own risk!

#--begin constants--

single_input = 331000
file_input = 331001
eval_input = 331002
decorator = 331003
decorators = 331004
decorated = 331005
funcdef = 331006
parameters = 331007
varargslist = 331008
fpdef = 331009
fplist = 331010
stmt = 331011
simple_stmt = 331012
small_stmt = 331013
expr_stmt = 331014
augassign = 331015
print_stmt = 331016
del_stmt = 331017
pass_stmt = 331018
flow_stmt = 331019
break_stmt = 331020
continue_stmt = 331021
return_stmt = 331022
yield_stmt = 331023
raise_stmt = 331024
import_stmt = 331025
import_name = 331026
import_from = 331027
import_as_name = 331028
dotted_as_name = 331029
import_as_names = 331030
dotted_as_names = 331031
dotted_name = 331032
global_stmt = 331033
exec_stmt = 331034
assert_stmt = 331035
compound_stmt = 331036
if_stmt = 331037
while_stmt = 331038
for_stmt = 331039
try_stmt = 331040
with_stmt = 331041
with_item = 331042
except_clause = 331043
suite = 331044
testlist_safe = 331045
old_test = 331046
old_lambdef = 331047
test = 331048
or_test = 331049
and_test = 331050
not_test = 331051
comparison = 331052
comp_op = 331053
expr = 331054
xor_expr = 331055
and_expr = 331056
shift_expr = 331057
arith_expr = 331058
term = 331059
factor = 331060
power = 331061
atom = 331062
listmaker = 331063
testlist_comp = 331064
lambdef = 331065
trailer = 331066
subscriptlist = 331067
subscript = 331068
sliceop = 331069
exprlist = 331070
testlist = 331071
dictmaker = 331072
dictorsetmaker = 331073
classdef = 331074
arglist = 331075
argument = 331076
list_iter = 331077
list_for = 331078
list_if = 331079
comp_iter = 331080
comp_for = 331081
comp_if = 331082
testlist1 = 331083
encoding_decl = 331084
yield_expr = 331085

#--end constants--

tok_name = sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name

del _name
del _value
