#  This file is automatically generated; change it on your own risk!

#--begin constants--

single_input = 831000
file_input = 831001
eval_input = 831002
decorator = 831003
decorators = 831004
decorated = 831005
funcdef = 831006
parameters = 831007
varargslist = 831008
fpdef = 831009
fplist = 831010
stmt = 831011
simple_stmt = 831012
small_stmt = 831013
expr_stmt = 831014
augassign = 831015
print_stmt = 831016
del_stmt = 831017
pass_stmt = 831018
flow_stmt = 831019
break_stmt = 831020
continue_stmt = 831021
return_stmt = 831022
yield_stmt = 831023
raise_stmt = 831024
import_stmt = 831025
import_name = 831026
import_from = 831027
import_as_name = 831028
dotted_as_name = 831029
import_as_names = 831030
dotted_as_names = 831031
dotted_name = 831032
global_stmt = 831033
exec_stmt = 831034
assert_stmt = 831035
compound_stmt = 831036
if_stmt = 831037
while_stmt = 831038
for_stmt = 831039
try_stmt = 831040
with_stmt = 831041
with_item = 831042
except_clause = 831043
suite = 831044
testlist_safe = 831045
old_test = 831046
old_lambdef = 831047
test = 831048
or_test = 831049
and_test = 831050
not_test = 831051
comparison = 831052
comp_op = 831053
expr = 831054
xor_expr = 831055
and_expr = 831056
shift_expr = 831057
arith_expr = 831058
term = 831059
factor = 831060
power = 831061
atom = 831062
listmaker = 831063
testlist_comp = 831064
lambdef = 831065
trailer = 831066
subscriptlist = 831067
subscript = 831068
sliceop = 831069
exprlist = 831070
testlist = 831071
dictmaker = 831072
dictorsetmaker = 831073
classdef = 831074
arglist = 831075
argument = 831076
list_iter = 831077
list_for = 831078
list_if = 831079
comp_iter = 831080
comp_for = 831081
comp_if = 831082
testlist1 = 831083
encoding_decl = 831084
yield_expr = 831085
as_name = 831086
repeat_stmt = 831087
switch_stmt = 831088
case_stmt = 831089
thunk_stmt = 831090

#--end constants--

tok_name = sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name

del _name
del _value
