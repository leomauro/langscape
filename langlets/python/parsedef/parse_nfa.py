# ______________________________________________________________________
# This was automatically generated by nfagen.py.
# Hack at your own risk.

# LANGLET ID

LANGLET_ID = 0

from langscape.util.univset import*


# trail NFAs:

nfas = {1000: ['single_input: NEWLINE | simple_stmt | compound_stmt NEWLINE',
        (1000, 0, 1000),
        {(4, 1, 1000): [(None, '-', 1000)],
         (4, 4, 1000): [(None, '-', 1000)],
         (1000, 0, 1000): [(1036, 3, 1000), (1012, 2, 1000), (4, 1, 1000)],
         (1012, 2, 1000): [(None, '-', 1000)],
         (1036, 3, 1000): [(4, 4, 1000)]}],
 1001: ['file_input: ( NEWLINE | stmt)* ENDMARKER',
        (1001, 0, 1001),
        {(0, 3, 1001): [(None, '-', 1001)],
         (4, 1, 1001): [(0, 3, 1001), (4, 1, 1001), (1011, 2, 1001)],
         (1001, 0, 1001): [(0, 3, 1001), (4, 1, 1001), (1011, 2, 1001)],
         (1011, 2, 1001): [(0, 3, 1001), (4, 1, 1001), (1011, 2, 1001)]}],
 1002: ['eval_input: testlist NEWLINE* ENDMARKER',
        (1002, 0, 1002),
        {(0, 3, 1002): [(None, '-', 1002)],
         (4, 2, 1002): [(0, 3, 1002), (4, 2, 1002)],
         (1002, 0, 1002): [(1071, 1, 1002)],
         (1071, 1, 1002): [(0, 3, 1002), (4, 2, 1002)]}],
 1003: ["decorator: '@' dotted_name ['(' [arglist] ')'] NEWLINE",
        (1003, 0, 1003),
        {(4, 6, 1003): [(None, '-', 1003)],
         (7, 3, 1003): [(1075, 4, 1003), (8, 5, 1003)],
         (8, 5, 1003): [(4, 6, 1003)],
         (50, 1, 1003): [(1032, 2, 1003)],
         (1003, 0, 1003): [(50, 1, 1003)],
         (1032, 2, 1003): [(4, 6, 1003), (7, 3, 1003)],
         (1075, 4, 1003): [(8, 5, 1003)]}],
 1004: ['decorators: decorator+',
        (1004, 0, 1004),
        {(1003, 1, 1004): [(None, '-', 1004), (1003, 1, 1004)],
         (1004, 0, 1004): [(1003, 1, 1004)]}],
 1005: ['decorated: decorators ( classdef | funcdef)',
        (1005, 0, 1005),
        {(1004, 1, 1005): [(1074, 2, 1005), (1006, 3, 1005)],
         (1005, 0, 1005): [(1004, 1, 1005)],
         (1006, 3, 1005): [(None, '-', 1005)],
         (1074, 2, 1005): [(None, '-', 1005)]}],
 1006: ["funcdef: 'def' NAME parameters ':' suite",
        (1006, 0, 1006),
        {(1, 2, 1006): [(1007, 3, 1006)],
         (11, 4, 1006): [(1044, 5, 1006)],
         (506, 1, 1006): [(1, 2, 1006)],
         (1006, 0, 1006): [(506, 1, 1006)],
         (1007, 3, 1006): [(11, 4, 1006)],
         (1044, 5, 1006): [(None, '-', 1006)]}],
 1007: ["parameters: '(' [varargslist] ')'",
        (1007, 0, 1007),
        {(7, 1, 1007): [(1008, 2, 1007), (8, 3, 1007)],
         (8, 3, 1007): [(None, '-', 1007)],
         (1007, 0, 1007): [(7, 1, 1007)],
         (1008, 2, 1007): [(8, 3, 1007)]}],
 1008: ["varargslist: (( fpdef ['=' test] ',')* ('*' NAME [',' '**' NAME] | '**' NAME) | fpdef ['=' test] (',' fpdef ['=' test])* [','])",
        (1008, 0, 1008),
        {(1, 6, 1008): [(12, 7, 1008), (None, '-', 1008)],
         (1, 9, 1008): [(None, '-', 1008)],
         (1, 11, 1008): [(None, '-', 1008)],
         (12, 4, 1008): [(1009, 1, 1008), (36, 10, 1008), (16, 5, 1008)],
         (12, 7, 1008): [(36, 8, 1008)],
         (12, 15, 1008): [(1009, 16, 1008)],
         (12, 19, 1008): [(None, '-', 1008)],
         (16, 5, 1008): [(1, 6, 1008)],
         (22, 2, 1008): [(1048, 3, 1008)],
         (22, 13, 1008): [(1048, 14, 1008)],
         (22, 17, 1008): [(1048, 18, 1008)],
         (36, 8, 1008): [(1, 9, 1008)],
         (36, 10, 1008): [(1, 11, 1008)],
         (1008, 0, 1008): [(1009, 1, 1008),
                           (1009, 12, 1008),
                           (36, 10, 1008),
                           (16, 5, 1008)],
         (1009, 1, 1008): [(12, 4, 1008), (22, 2, 1008)],
         (1009, 12, 1008): [(12, 15, 1008),
                            (12, 19, 1008),
                            (None, '-', 1008),
                            (22, 13, 1008)],
         (1009, 16, 1008): [(22, 17, 1008),
                            (12, 15, 1008),
                            (None, '-', 1008),
                            (12, 19, 1008)],
         (1048, 3, 1008): [(12, 4, 1008)],
         (1048, 14, 1008): [(12, 15, 1008),
                            (None, '-', 1008),
                            (12, 19, 1008)],
         (1048, 18, 1008): [(12, 15, 1008),
                            (None, '-', 1008),
                            (12, 19, 1008)]}],
 1009: ["fpdef: NAME | '(' fplist ')'",
        (1009, 0, 1009),
        {(1, 1, 1009): [(None, '-', 1009)],
         (7, 2, 1009): [(1010, 3, 1009)],
         (8, 4, 1009): [(None, '-', 1009)],
         (1009, 0, 1009): [(1, 1, 1009), (7, 2, 1009)],
         (1010, 3, 1009): [(8, 4, 1009)]}],
 1010: ["fplist: fpdef (',' fpdef)* [',']",
        (1010, 0, 1010),
        {(12, 2, 1010): [(1009, 3, 1010)],
         (12, 4, 1010): [(None, '-', 1010)],
         (1009, 1, 1010): [(12, 2, 1010), (12, 4, 1010), (None, '-', 1010)],
         (1009, 3, 1010): [(12, 2, 1010), (12, 4, 1010), (None, '-', 1010)],
         (1010, 0, 1010): [(1009, 1, 1010)]}],
 1011: ['stmt: simple_stmt | compound_stmt',
        (1011, 0, 1011),
        {(1011, 0, 1011): [(1012, 1, 1011), (1036, 2, 1011)],
         (1012, 1, 1011): [(None, '-', 1011)],
         (1036, 2, 1011): [(None, '-', 1011)]}],
 1012: ["simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE",
        (1012, 0, 1012),
        {(4, 5, 1012): [(None, '-', 1012)],
         (13, 2, 1012): [(1013, 3, 1012)],
         (13, 4, 1012): [(4, 5, 1012)],
         (1012, 0, 1012): [(1013, 1, 1012)],
         (1013, 1, 1012): [(13, 2, 1012), (13, 4, 1012), (4, 5, 1012)],
         (1013, 3, 1012): [(13, 2, 1012), (13, 4, 1012), (4, 5, 1012)]}],
 1013: ['small_stmt: ( expr_stmt | print_stmt | del_stmt | pass_stmt | flow_stmt | import_stmt | global_stmt | exec_stmt | assert_stmt)',
        (1013, 0, 1013),
        {(1013, 0, 1013): [(1017, 3, 1013),
                           (1033, 7, 1013),
                           (1016, 2, 1013),
                           (1025, 6, 1013),
                           (1019, 5, 1013),
                           (1018, 4, 1013),
                           (1035, 9, 1013),
                           (1034, 8, 1013),
                           (1014, 1, 1013)],
         (1014, 1, 1013): [(None, '-', 1013)],
         (1016, 2, 1013): [(None, '-', 1013)],
         (1017, 3, 1013): [(None, '-', 1013)],
         (1018, 4, 1013): [(None, '-', 1013)],
         (1019, 5, 1013): [(None, '-', 1013)],
         (1025, 6, 1013): [(None, '-', 1013)],
         (1033, 7, 1013): [(None, '-', 1013)],
         (1034, 8, 1013): [(None, '-', 1013)],
         (1035, 9, 1013): [(None, '-', 1013)]}],
 1014: ["expr_stmt: testlist ( augassign ( yield_expr | testlist) | ('=' ( yield_expr | testlist))*)",
        (1014, 0, 1014),
        {(22, 5, 1014): [(1071, 7, 1014), (1085, 6, 1014)],
         (1014, 0, 1014): [(1071, 1, 1014)],
         (1015, 2, 1014): [(1071, 4, 1014), (1085, 3, 1014)],
         (1071, 1, 1014): [(None, '-', 1014),
                           (22, 5, 1014),
                           (1015, 2, 1014)],
         (1071, 4, 1014): [(None, '-', 1014)],
         (1071, 7, 1014): [(None, '-', 1014), (22, 5, 1014)],
         (1085, 3, 1014): [(None, '-', 1014)],
         (1085, 6, 1014): [(None, '-', 1014), (22, 5, 1014)]}],
 1015: ["augassign: ('+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>>=' | '**=' | '//=')",
        (1015, 0, 1015),
        {(37, 1, 1015): [(None, '-', 1015)],
         (38, 2, 1015): [(None, '-', 1015)],
         (39, 3, 1015): [(None, '-', 1015)],
         (40, 4, 1015): [(None, '-', 1015)],
         (41, 5, 1015): [(None, '-', 1015)],
         (42, 6, 1015): [(None, '-', 1015)],
         (43, 7, 1015): [(None, '-', 1015)],
         (44, 8, 1015): [(None, '-', 1015)],
         (45, 9, 1015): [(None, '-', 1015)],
         (46, 10, 1015): [(None, '-', 1015)],
         (47, 11, 1015): [(None, '-', 1015)],
         (49, 12, 1015): [(None, '-', 1015)],
         (1015, 0, 1015): [(45, 9, 1015),
                           (38, 2, 1015),
                           (39, 3, 1015),
                           (49, 12, 1015),
                           (42, 6, 1015),
                           (41, 5, 1015),
                           (43, 7, 1015),
                           (46, 10, 1015),
                           (37, 1, 1015),
                           (40, 4, 1015),
                           (47, 11, 1015),
                           (44, 8, 1015)]}],
 1016: ["print_stmt: 'print' ([test (',' test)* [',']] | '>>' test [(',' test)+ [',']])",
        (1016, 0, 1016),
        {(12, 3, 1016): [(1048, 4, 1016)],
         (12, 5, 1016): [(None, '-', 1016)],
         (12, 8, 1016): [(1048, 9, 1016)],
         (12, 10, 1016): [(None, '-', 1016)],
         (35, 6, 1016): [(1048, 7, 1016)],
         (523, 1, 1016): [(1048, 2, 1016), (None, '-', 1016), (35, 6, 1016)],
         (1016, 0, 1016): [(523, 1, 1016)],
         (1048, 2, 1016): [(12, 5, 1016), (None, '-', 1016), (12, 3, 1016)],
         (1048, 4, 1016): [(12, 5, 1016), (None, '-', 1016), (12, 3, 1016)],
         (1048, 7, 1016): [(None, '-', 1016), (12, 8, 1016)],
         (1048, 9, 1016): [(None, '-', 1016), (12, 10, 1016), (12, 8, 1016)]}],
 1017: ["del_stmt: 'del' exprlist",
        (1017, 0, 1017),
        {(530, 1, 1017): [(1070, 2, 1017)],
         (1017, 0, 1017): [(530, 1, 1017)],
         (1070, 2, 1017): [(None, '-', 1017)]}],
 1018: ["pass_stmt: 'pass'",
        (1018, 0, 1018),
        {(520, 1, 1018): [(None, '-', 1018)],
         (1018, 0, 1018): [(520, 1, 1018)]}],
 1019: ['flow_stmt: break_stmt | continue_stmt | return_stmt | raise_stmt | yield_stmt',
        (1019, 0, 1019),
        {(1019, 0, 1019): [(1021, 2, 1019),
                           (1024, 4, 1019),
                           (1020, 1, 1019),
                           (1023, 5, 1019),
                           (1022, 3, 1019)],
         (1020, 1, 1019): [(None, '-', 1019)],
         (1021, 2, 1019): [(None, '-', 1019)],
         (1022, 3, 1019): [(None, '-', 1019)],
         (1023, 5, 1019): [(None, '-', 1019)],
         (1024, 4, 1019): [(None, '-', 1019)]}],
 1020: ["break_stmt: 'break'",
        (1020, 0, 1020),
        {(526, 1, 1020): [(None, '-', 1020)],
         (1020, 0, 1020): [(526, 1, 1020)]}],
 1021: ["continue_stmt: 'continue'",
        (1021, 0, 1021),
        {(521, 1, 1021): [(None, '-', 1021)],
         (1021, 0, 1021): [(521, 1, 1021)]}],
 1022: ["return_stmt: 'return' [testlist]",
        (1022, 0, 1022),
        {(522, 1, 1022): [(None, '-', 1022), (1071, 2, 1022)],
         (1022, 0, 1022): [(522, 1, 1022)],
         (1071, 2, 1022): [(None, '-', 1022)]}],
 1023: ['yield_stmt: yield_expr',
        (1023, 0, 1023),
        {(1023, 0, 1023): [(1085, 1, 1023)],
         (1085, 1, 1023): [(None, '-', 1023)]}],
 1024: ["raise_stmt: 'raise' [test [',' test [',' test]]]",
        (1024, 0, 1024),
        {(12, 3, 1024): [(1048, 4, 1024)],
         (12, 5, 1024): [(1048, 6, 1024)],
         (524, 1, 1024): [(1048, 2, 1024), (None, '-', 1024)],
         (1024, 0, 1024): [(524, 1, 1024)],
         (1048, 2, 1024): [(None, '-', 1024), (12, 3, 1024)],
         (1048, 4, 1024): [(12, 5, 1024), (None, '-', 1024)],
         (1048, 6, 1024): [(None, '-', 1024)]}],
 1025: ['import_stmt: import_name | import_from',
        (1025, 0, 1025),
        {(1025, 0, 1025): [(1026, 1, 1025), (1027, 2, 1025)],
         (1026, 1, 1025): [(None, '-', 1025)],
         (1027, 2, 1025): [(None, '-', 1025)]}],
 1026: ["import_name: 'import' dotted_as_names",
        (1026, 0, 1026),
        {(504, 1, 1026): [(1031, 2, 1026)],
         (1026, 0, 1026): [(504, 1, 1026)],
         (1031, 2, 1026): [(None, '-', 1026)]}],
 1027: ["import_from: ('from' ('.'* dotted_name | '.'+) 'import' ('*' | '(' import_as_names ')' | import_as_names))",
        (1027, 0, 1027),
        {(7, 7, 1027): [(1030, 8, 1027)],
         (8, 9, 1027): [(None, '-', 1027)],
         (16, 6, 1027): [(None, '-', 1027)],
         (23, 2, 1027): [(1032, 3, 1027), (23, 2, 1027)],
         (23, 4, 1027): [(504, 5, 1027), (23, 4, 1027)],
         (504, 5, 1027): [(7, 7, 1027), (16, 6, 1027), (1030, 10, 1027)],
         (505, 1, 1027): [(1032, 3, 1027), (23, 2, 1027), (23, 4, 1027)],
         (1027, 0, 1027): [(505, 1, 1027)],
         (1030, 8, 1027): [(8, 9, 1027)],
         (1030, 10, 1027): [(None, '-', 1027)],
         (1032, 3, 1027): [(504, 5, 1027)]}],
 1028: ["import_as_name: NAME ['as' NAME]",
        (1028, 0, 1028),
        {(1, 1, 1028): [(500, 2, 1028), (None, '-', 1028)],
         (1, 3, 1028): [(None, '-', 1028)],
         (500, 2, 1028): [(1, 3, 1028)],
         (1028, 0, 1028): [(1, 1, 1028)]}],
 1029: ["dotted_as_name: dotted_name ['as' NAME]",
        (1029, 0, 1029),
        {(1, 3, 1029): [(None, '-', 1029)],
         (500, 2, 1029): [(1, 3, 1029)],
         (1029, 0, 1029): [(1032, 1, 1029)],
         (1032, 1, 1029): [(None, '-', 1029), (500, 2, 1029)]}],
 1030: ["import_as_names: import_as_name (',' import_as_name)* [',']",
        (1030, 0, 1030),
        {(12, 2, 1030): [(1028, 3, 1030)],
         (12, 4, 1030): [(None, '-', 1030)],
         (1028, 1, 1030): [(12, 4, 1030), (12, 2, 1030), (None, '-', 1030)],
         (1028, 3, 1030): [(12, 4, 1030), (12, 2, 1030), (None, '-', 1030)],
         (1030, 0, 1030): [(1028, 1, 1030)]}],
 1031: ["dotted_as_names: dotted_as_name (',' dotted_as_name)*",
        (1031, 0, 1031),
        {(12, 2, 1031): [(1029, 3, 1031)],
         (1029, 1, 1031): [(12, 2, 1031), (None, '-', 1031)],
         (1029, 3, 1031): [(12, 2, 1031), (None, '-', 1031)],
         (1031, 0, 1031): [(1029, 1, 1031)]}],
 1032: ["dotted_name: NAME ('.' NAME)*",
        (1032, 0, 1032),
        {(1, 1, 1032): [(None, '-', 1032), (23, 2, 1032)],
         (1, 3, 1032): [(None, '-', 1032), (23, 2, 1032)],
         (23, 2, 1032): [(1, 3, 1032)],
         (1032, 0, 1032): [(1, 1, 1032)]}],
 1033: ["global_stmt: 'global' NAME (',' NAME)*",
        (1033, 0, 1033),
        {(1, 2, 1033): [(12, 3, 1033), (None, '-', 1033)],
         (1, 4, 1033): [(12, 3, 1033), (None, '-', 1033)],
         (12, 3, 1033): [(1, 4, 1033)],
         (527, 1, 1033): [(1, 2, 1033)],
         (1033, 0, 1033): [(527, 1, 1033)]}],
 1034: ["exec_stmt: 'exec' expr ['in' test [',' test]]",
        (1034, 0, 1034),
        {(12, 5, 1034): [(1048, 6, 1034)],
         (510, 3, 1034): [(1048, 4, 1034)],
         (519, 1, 1034): [(1054, 2, 1034)],
         (1034, 0, 1034): [(519, 1, 1034)],
         (1048, 4, 1034): [(12, 5, 1034), (None, '-', 1034)],
         (1048, 6, 1034): [(None, '-', 1034)],
         (1054, 2, 1034): [(510, 3, 1034), (None, '-', 1034)]}],
 1035: ["assert_stmt: 'assert' test [',' test]",
        (1035, 0, 1035),
        {(12, 3, 1035): [(1048, 4, 1035)],
         (512, 1, 1035): [(1048, 2, 1035)],
         (1035, 0, 1035): [(512, 1, 1035)],
         (1048, 2, 1035): [(12, 3, 1035), (None, '-', 1035)],
         (1048, 4, 1035): [(None, '-', 1035)]}],
 1036: ['compound_stmt: if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef | decorated',
        (1036, 0, 1036),
        {(1005, 8, 1036): [(None, '-', 1036)],
         (1006, 6, 1036): [(None, '-', 1036)],
         (1036, 0, 1036): [(1039, 3, 1036),
                           (1040, 4, 1036),
                           (1038, 2, 1036),
                           (1006, 6, 1036),
                           (1074, 7, 1036),
                           (1037, 1, 1036),
                           (1005, 8, 1036),
                           (1041, 5, 1036)],
         (1037, 1, 1036): [(None, '-', 1036)],
         (1038, 2, 1036): [(None, '-', 1036)],
         (1039, 3, 1036): [(None, '-', 1036)],
         (1040, 4, 1036): [(None, '-', 1036)],
         (1041, 5, 1036): [(None, '-', 1036)],
         (1074, 7, 1036): [(None, '-', 1036)]}],
 1037: ["if_stmt: 'if' test ':' suite ('elif' test ':' suite)* ['else' ':' suite]",
        (1037, 0, 1037),
        {(11, 3, 1037): [(1044, 4, 1037)],
         (11, 7, 1037): [(1044, 8, 1037)],
         (11, 10, 1037): [(1044, 11, 1037)],
         (502, 9, 1037): [(11, 10, 1037)],
         (515, 5, 1037): [(1048, 6, 1037)],
         (516, 1, 1037): [(1048, 2, 1037)],
         (1037, 0, 1037): [(516, 1, 1037)],
         (1044, 4, 1037): [(None, '-', 1037),
                           (502, 9, 1037),
                           (515, 5, 1037)],
         (1044, 8, 1037): [(None, '-', 1037),
                           (502, 9, 1037),
                           (515, 5, 1037)],
         (1044, 11, 1037): [(None, '-', 1037)],
         (1048, 2, 1037): [(11, 3, 1037)],
         (1048, 6, 1037): [(11, 7, 1037)]}],
 1038: ["while_stmt: 'while' test ':' suite ['else' ':' suite]",
        (1038, 0, 1038),
        {(11, 3, 1038): [(1044, 4, 1038)],
         (11, 6, 1038): [(1044, 7, 1038)],
         (502, 5, 1038): [(11, 6, 1038)],
         (531, 1, 1038): [(1048, 2, 1038)],
         (1038, 0, 1038): [(531, 1, 1038)],
         (1044, 4, 1038): [(None, '-', 1038), (502, 5, 1038)],
         (1044, 7, 1038): [(None, '-', 1038)],
         (1048, 2, 1038): [(11, 3, 1038)]}],
 1039: ["for_stmt: 'for' exprlist 'in' testlist ':' suite ['else' ':' suite]",
        (1039, 0, 1039),
        {(11, 5, 1039): [(1044, 6, 1039)],
         (11, 8, 1039): [(1044, 9, 1039)],
         (502, 7, 1039): [(11, 8, 1039)],
         (510, 3, 1039): [(1071, 4, 1039)],
         (513, 1, 1039): [(1070, 2, 1039)],
         (1039, 0, 1039): [(513, 1, 1039)],
         (1044, 6, 1039): [(None, '-', 1039), (502, 7, 1039)],
         (1044, 9, 1039): [(None, '-', 1039)],
         (1070, 2, 1039): [(510, 3, 1039)],
         (1071, 4, 1039): [(11, 5, 1039)]}],
 1040: ["try_stmt: ('try' ':' suite (( except_clause ':' suite)+ ['else' ':' suite] ['finally' ':' suite] | 'finally' ':' suite))",
        (1040, 0, 1040),
        {(11, 2, 1040): [(1044, 3, 1040)],
         (11, 5, 1040): [(1044, 6, 1040)],
         (11, 8, 1040): [(1044, 9, 1040)],
         (11, 11, 1040): [(1044, 12, 1040)],
         (11, 14, 1040): [(1044, 15, 1040)],
         (501, 10, 1040): [(11, 11, 1040)],
         (501, 13, 1040): [(11, 14, 1040)],
         (502, 7, 1040): [(11, 8, 1040)],
         (503, 1, 1040): [(11, 2, 1040)],
         (1040, 0, 1040): [(503, 1, 1040)],
         (1043, 4, 1040): [(11, 5, 1040)],
         (1044, 3, 1040): [(501, 13, 1040), (1043, 4, 1040)],
         (1044, 6, 1040): [(502, 7, 1040),
                           (None, '-', 1040),
                           (501, 10, 1040),
                           (1043, 4, 1040)],
         (1044, 9, 1040): [(None, '-', 1040), (501, 10, 1040)],
         (1044, 12, 1040): [(None, '-', 1040)],
         (1044, 15, 1040): [(None, '-', 1040)]}],
 1041: ["with_stmt: 'with' with_item (',' with_item)* ':' suite",
        (1041, 0, 1041),
        {(11, 5, 1041): [(1044, 6, 1041)],
         (12, 3, 1041): [(1042, 4, 1041)],
         (518, 1, 1041): [(1042, 2, 1041)],
         (1041, 0, 1041): [(518, 1, 1041)],
         (1042, 2, 1041): [(11, 5, 1041), (12, 3, 1041)],
         (1042, 4, 1041): [(11, 5, 1041), (12, 3, 1041)],
         (1044, 6, 1041): [(None, '-', 1041)]}],
 1042: ["with_item: test ['as' expr]",
        (1042, 0, 1042),
        {(500, 2, 1042): [(1054, 3, 1042)],
         (1042, 0, 1042): [(1048, 1, 1042)],
         (1048, 1, 1042): [(500, 2, 1042), (None, '-', 1042)],
         (1054, 3, 1042): [(None, '-', 1042)]}],
 1043: ["except_clause: 'except' [test [('as' | ',') test]]",
        (1043, 0, 1043),
        {(12, 4, 1043): [(1048, 5, 1043)],
         (500, 3, 1043): [(1048, 5, 1043)],
         (525, 1, 1043): [(1048, 2, 1043), (None, '-', 1043)],
         (1043, 0, 1043): [(525, 1, 1043)],
         (1048, 2, 1043): [(None, '-', 1043), (500, 3, 1043), (12, 4, 1043)],
         (1048, 5, 1043): [(None, '-', 1043)]}],
 1044: ['suite: simple_stmt | NEWLINE INDENT stmt+ DEDENT',
        (1044, 0, 1044),
        {(4, 2, 1044): [(5, 3, 1044)],
         (5, 3, 1044): [(1011, 4, 1044)],
         (6, 5, 1044): [(None, '-', 1044)],
         (1011, 4, 1044): [(6, 5, 1044), (1011, 4, 1044)],
         (1012, 1, 1044): [(None, '-', 1044)],
         (1044, 0, 1044): [(4, 2, 1044), (1012, 1, 1044)]}],
 1045: ["testlist_safe: old_test [(',' old_test)+ [',']]",
        (1045, 0, 1045),
        {(12, 2, 1045): [(1046, 3, 1045)],
         (12, 4, 1045): [(None, '-', 1045)],
         (1045, 0, 1045): [(1046, 1, 1045)],
         (1046, 1, 1045): [(None, '-', 1045), (12, 2, 1045)],
         (1046, 3, 1045): [(12, 4, 1045), (None, '-', 1045), (12, 2, 1045)]}],
 1046: ['old_test: or_test | old_lambdef',
        (1046, 0, 1046),
        {(1046, 0, 1046): [(1047, 2, 1046), (1049, 1, 1046)],
         (1047, 2, 1046): [(None, '-', 1046)],
         (1049, 1, 1046): [(None, '-', 1046)]}],
 1047: ["old_lambdef: 'lambda' [varargslist] ':' old_test",
        (1047, 0, 1047),
        {(11, 3, 1047): [(1046, 4, 1047)],
         (514, 1, 1047): [(11, 3, 1047), (1008, 2, 1047)],
         (1008, 2, 1047): [(11, 3, 1047)],
         (1046, 4, 1047): [(None, '-', 1047)],
         (1047, 0, 1047): [(514, 1, 1047)]}],
 1048: ["test: or_test ['if' or_test 'else' test] | lambdef",
        (1048, 0, 1048),
        {(502, 4, 1048): [(1048, 5, 1048)],
         (516, 2, 1048): [(1049, 3, 1048)],
         (1048, 0, 1048): [(1049, 1, 1048), (1065, 6, 1048)],
         (1048, 5, 1048): [(None, '-', 1048)],
         (1049, 1, 1048): [(None, '-', 1048), (516, 2, 1048)],
         (1049, 3, 1048): [(502, 4, 1048)],
         (1065, 6, 1048): [(None, '-', 1048)]}],
 1049: ["or_test: and_test ('or' and_test)*",
        (1049, 0, 1049),
        {(517, 2, 1049): [(1050, 3, 1049)],
         (1049, 0, 1049): [(1050, 1, 1049)],
         (1050, 1, 1049): [(None, '-', 1049), (517, 2, 1049)],
         (1050, 3, 1049): [(None, '-', 1049), (517, 2, 1049)]}],
 1050: ["and_test: not_test ('and' not_test)*",
        (1050, 0, 1050),
        {(529, 2, 1050): [(1051, 3, 1050)],
         (1050, 0, 1050): [(1051, 1, 1050)],
         (1051, 1, 1050): [(529, 2, 1050), (None, '-', 1050)],
         (1051, 3, 1050): [(529, 2, 1050), (None, '-', 1050)]}],
 1051: ["not_test: 'not' not_test | comparison",
        (1051, 0, 1051),
        {(507, 1, 1051): [(1051, 2, 1051)],
         (1051, 0, 1051): [(1052, 3, 1051), (507, 1, 1051)],
         (1051, 2, 1051): [(None, '-', 1051)],
         (1052, 3, 1051): [(None, '-', 1051)]}],
 1052: ['comparison: expr ( comp_op expr)*',
        (1052, 0, 1052),
        {(1052, 0, 1052): [(1054, 1, 1052)],
         (1053, 2, 1052): [(1054, 3, 1052)],
         (1054, 1, 1052): [(1053, 2, 1052), (None, '-', 1052)],
         (1054, 3, 1052): [(1053, 2, 1052), (None, '-', 1052)]}],
 1053: ["comp_op: '<' | '>' | '==' | '>=' | '<=' | '<>' | '!=' | 'in' | 'not' 'in' | 'is' | 'is' 'not'",
        (1053, 0, 1053),
        {(20, 1, 1053): [(None, '-', 1053)],
         (21, 2, 1053): [(None, '-', 1053)],
         (28, 3, 1053): [(None, '-', 1053)],
         (29, 7, 1053): [(None, '-', 1053)],
         (30, 5, 1053): [(None, '-', 1053)],
         (31, 4, 1053): [(None, '-', 1053)],
         (507, 9, 1053): [(510, 10, 1053)],
         (507, 13, 1053): [(None, '-', 1053)],
         (508, 11, 1053): [(None, '-', 1053)],
         (508, 12, 1053): [(507, 13, 1053)],
         (509, 6, 1053): [(None, '-', 1053)],
         (510, 8, 1053): [(None, '-', 1053)],
         (510, 10, 1053): [(None, '-', 1053)],
         (1053, 0, 1053): [(507, 9, 1053),
                           (28, 3, 1053),
                           (30, 5, 1053),
                           (508, 12, 1053),
                           (21, 2, 1053),
                           (20, 1, 1053),
                           (509, 6, 1053),
                           (29, 7, 1053),
                           (31, 4, 1053),
                           (510, 8, 1053),
                           (508, 11, 1053)]}],
 1054: ["expr: xor_expr ('|' xor_expr)*",
        (1054, 0, 1054),
        {(18, 2, 1054): [(1055, 3, 1054)],
         (1054, 0, 1054): [(1055, 1, 1054)],
         (1055, 1, 1054): [(None, '-', 1054), (18, 2, 1054)],
         (1055, 3, 1054): [(None, '-', 1054), (18, 2, 1054)]}],
 1055: ["xor_expr: and_expr ('^' and_expr)*",
        (1055, 0, 1055),
        {(33, 2, 1055): [(1056, 3, 1055)],
         (1055, 0, 1055): [(1056, 1, 1055)],
         (1056, 1, 1055): [(None, '-', 1055), (33, 2, 1055)],
         (1056, 3, 1055): [(None, '-', 1055), (33, 2, 1055)]}],
 1056: ["and_expr: shift_expr ('&' shift_expr)*",
        (1056, 0, 1056),
        {(19, 2, 1056): [(1057, 3, 1056)],
         (1056, 0, 1056): [(1057, 1, 1056)],
         (1057, 1, 1056): [(19, 2, 1056), (None, '-', 1056)],
         (1057, 3, 1056): [(19, 2, 1056), (None, '-', 1056)]}],
 1057: ["shift_expr: arith_expr (('<<' | '>>') arith_expr)*",
        (1057, 0, 1057),
        {(34, 2, 1057): [(1058, 4, 1057)],
         (35, 3, 1057): [(1058, 4, 1057)],
         (1057, 0, 1057): [(1058, 1, 1057)],
         (1058, 1, 1057): [(34, 2, 1057), (35, 3, 1057), (None, '-', 1057)],
         (1058, 4, 1057): [(34, 2, 1057), (35, 3, 1057), (None, '-', 1057)]}],
 1058: ["arith_expr: term (('+' | '-') term)*",
        (1058, 0, 1058),
        {(14, 2, 1058): [(1059, 4, 1058)],
         (15, 3, 1058): [(1059, 4, 1058)],
         (1058, 0, 1058): [(1059, 1, 1058)],
         (1059, 1, 1058): [(15, 3, 1058), (14, 2, 1058), (None, '-', 1058)],
         (1059, 4, 1058): [(15, 3, 1058), (14, 2, 1058), (None, '-', 1058)]}],
 1059: ["term: factor (('*' | '/' | '%' | '//') factor)*",
        (1059, 0, 1059),
        {(16, 2, 1059): [(1060, 6, 1059)],
         (17, 3, 1059): [(1060, 6, 1059)],
         (24, 4, 1059): [(1060, 6, 1059)],
         (48, 5, 1059): [(1060, 6, 1059)],
         (1059, 0, 1059): [(1060, 1, 1059)],
         (1060, 1, 1059): [(16, 2, 1059),
                           (24, 4, 1059),
                           (48, 5, 1059),
                           (17, 3, 1059),
                           (None, '-', 1059)],
         (1060, 6, 1059): [(16, 2, 1059),
                           (24, 4, 1059),
                           (48, 5, 1059),
                           (None, '-', 1059),
                           (17, 3, 1059)]}],
 1060: ["factor: ('+' | '-' | '~') factor | power",
        (1060, 0, 1060),
        {(14, 1, 1060): [(1060, 4, 1060)],
         (15, 2, 1060): [(1060, 4, 1060)],
         (32, 3, 1060): [(1060, 4, 1060)],
         (1060, 0, 1060): [(15, 2, 1060),
                           (32, 3, 1060),
                           (14, 1, 1060),
                           (1061, 5, 1060)],
         (1060, 4, 1060): [(None, '-', 1060)],
         (1061, 5, 1060): [(None, '-', 1060)]}],
 1061: ["power: atom trailer* ['**' factor]",
        (1061, 0, 1061),
        {(36, 3, 1061): [(1060, 4, 1061)],
         (1060, 4, 1061): [(None, '-', 1061)],
         (1061, 0, 1061): [(1062, 1, 1061)],
         (1062, 1, 1061): [(None, '-', 1061),
                           (1066, 2, 1061),
                           (36, 3, 1061)],
         (1066, 2, 1061): [(None, '-', 1061),
                           (1066, 2, 1061),
                           (36, 3, 1061)]}],
 1062: ["atom: ('(' [yield_expr | testlist_comp] ')' | '[' [listmaker] ']' | '{' [dictorsetmaker] '}' | '`' testlist1 '`' | NAME | NUMBER | STRING+)",
        (1062, 0, 1062),
        {(1, 14, 1062): [(None, '-', 1062)],
         (2, 15, 1062): [(None, '-', 1062)],
         (3, 16, 1062): [(None, '-', 1062), (3, 16, 1062)],
         (7, 1, 1062): [(1085, 2, 1062), (8, 4, 1062), (1064, 3, 1062)],
         (8, 4, 1062): [(None, '-', 1062)],
         (9, 5, 1062): [(10, 7, 1062), (1063, 6, 1062)],
         (10, 7, 1062): [(None, '-', 1062)],
         (25, 11, 1062): [(1083, 12, 1062)],
         (25, 13, 1062): [(None, '-', 1062)],
         (26, 8, 1062): [(1073, 9, 1062), (27, 10, 1062)],
         (27, 10, 1062): [(None, '-', 1062)],
         (1062, 0, 1062): [(9, 5, 1062),
                           (25, 11, 1062),
                           (2, 15, 1062),
                           (7, 1, 1062),
                           (26, 8, 1062),
                           (1, 14, 1062),
                           (3, 16, 1062)],
         (1063, 6, 1062): [(10, 7, 1062)],
         (1064, 3, 1062): [(8, 4, 1062)],
         (1073, 9, 1062): [(27, 10, 1062)],
         (1083, 12, 1062): [(25, 13, 1062)],
         (1085, 2, 1062): [(8, 4, 1062)]}],
 1063: ["listmaker: test ( list_for | (',' test)* [','])",
        (1063, 0, 1063),
        {(12, 3, 1063): [(1048, 4, 1063)],
         (12, 5, 1063): [(None, '-', 1063)],
         (1048, 1, 1063): [(12, 3, 1063),
                           (1078, 2, 1063),
                           (12, 5, 1063),
                           (None, '-', 1063)],
         (1048, 4, 1063): [(12, 3, 1063), (None, '-', 1063), (12, 5, 1063)],
         (1063, 0, 1063): [(1048, 1, 1063)],
         (1078, 2, 1063): [(None, '-', 1063)]}],
 1064: ["testlist_comp: test ( comp_for | (',' test)* [','])",
        (1064, 0, 1064),
        {(12, 3, 1064): [(1048, 4, 1064)],
         (12, 5, 1064): [(None, '-', 1064)],
         (1048, 1, 1064): [(12, 5, 1064),
                           (None, '-', 1064),
                           (12, 3, 1064),
                           (1081, 2, 1064)],
         (1048, 4, 1064): [(12, 5, 1064), (None, '-', 1064), (12, 3, 1064)],
         (1064, 0, 1064): [(1048, 1, 1064)],
         (1081, 2, 1064): [(None, '-', 1064)]}],
 1065: ["lambdef: 'lambda' [varargslist] ':' test",
        (1065, 0, 1065),
        {(11, 3, 1065): [(1048, 4, 1065)],
         (514, 1, 1065): [(1008, 2, 1065), (11, 3, 1065)],
         (1008, 2, 1065): [(11, 3, 1065)],
         (1048, 4, 1065): [(None, '-', 1065)],
         (1065, 0, 1065): [(514, 1, 1065)]}],
 1066: ["trailer: '(' [arglist] ')' | '[' subscriptlist ']' | '.' NAME",
        (1066, 0, 1066),
        {(1, 8, 1066): [(None, '-', 1066)],
         (7, 1, 1066): [(1075, 2, 1066), (8, 3, 1066)],
         (8, 3, 1066): [(None, '-', 1066)],
         (9, 4, 1066): [(1067, 5, 1066)],
         (10, 6, 1066): [(None, '-', 1066)],
         (23, 7, 1066): [(1, 8, 1066)],
         (1066, 0, 1066): [(7, 1, 1066), (9, 4, 1066), (23, 7, 1066)],
         (1067, 5, 1066): [(10, 6, 1066)],
         (1075, 2, 1066): [(8, 3, 1066)]}],
 1067: ["subscriptlist: subscript (',' subscript)* [',']",
        (1067, 0, 1067),
        {(12, 2, 1067): [(1068, 3, 1067)],
         (12, 4, 1067): [(None, '-', 1067)],
         (1067, 0, 1067): [(1068, 1, 1067)],
         (1068, 1, 1067): [(12, 2, 1067), (None, '-', 1067), (12, 4, 1067)],
         (1068, 3, 1067): [(12, 2, 1067), (None, '-', 1067), (12, 4, 1067)]}],
 1068: ["subscript: '.' '.' '.' | test | [test] ':' [test] [sliceop]",
        (1068, 0, 1068),
        {(11, 6, 1068): [(1069, 8, 1068),
                         (1048, 7, 1068),
                         (None, '-', 1068)],
         (23, 1, 1068): [(23, 2, 1068)],
         (23, 2, 1068): [(23, 3, 1068)],
         (23, 3, 1068): [(None, '-', 1068)],
         (1048, 4, 1068): [(None, '-', 1068)],
         (1048, 5, 1068): [(11, 6, 1068)],
         (1048, 7, 1068): [(1069, 8, 1068), (None, '-', 1068)],
         (1068, 0, 1068): [(11, 6, 1068),
                           (1048, 5, 1068),
                           (23, 1, 1068),
                           (1048, 4, 1068)],
         (1069, 8, 1068): [(None, '-', 1068)]}],
 1069: ["sliceop: ':' [test]",
        (1069, 0, 1069),
        {(11, 1, 1069): [(None, '-', 1069), (1048, 2, 1069)],
         (1048, 2, 1069): [(None, '-', 1069)],
         (1069, 0, 1069): [(11, 1, 1069)]}],
 1070: ["exprlist: expr (',' expr)* [',']",
        (1070, 0, 1070),
        {(12, 2, 1070): [(1054, 3, 1070)],
         (12, 4, 1070): [(None, '-', 1070)],
         (1054, 1, 1070): [(12, 4, 1070), (12, 2, 1070), (None, '-', 1070)],
         (1054, 3, 1070): [(12, 4, 1070), (12, 2, 1070), (None, '-', 1070)],
         (1070, 0, 1070): [(1054, 1, 1070)]}],
 1071: ["testlist: test (',' test)* [',']",
        (1071, 0, 1071),
        {(12, 2, 1071): [(1048, 3, 1071)],
         (12, 4, 1071): [(None, '-', 1071)],
         (1048, 1, 1071): [(12, 2, 1071), (12, 4, 1071), (None, '-', 1071)],
         (1048, 3, 1071): [(12, 2, 1071), (12, 4, 1071), (None, '-', 1071)],
         (1071, 0, 1071): [(1048, 1, 1071)]}],
 1072: ["dictmaker: test ':' test (',' test ':' test)* [',']",
        (1072, 0, 1072),
        {(11, 2, 1072): [(1048, 3, 1072)],
         (11, 6, 1072): [(1048, 7, 1072)],
         (12, 4, 1072): [(1048, 5, 1072)],
         (12, 8, 1072): [(None, '-', 1072)],
         (1048, 1, 1072): [(11, 2, 1072)],
         (1048, 3, 1072): [(12, 4, 1072), (None, '-', 1072), (12, 8, 1072)],
         (1048, 5, 1072): [(11, 6, 1072)],
         (1048, 7, 1072): [(12, 4, 1072), (None, '-', 1072), (12, 8, 1072)],
         (1072, 0, 1072): [(1048, 1, 1072)]}],
 1073: ["dictorsetmaker: (( test ':' test ( comp_for | (',' test ':' test)* [','])) | ( test ( comp_for | (',' test)* [','])))",
        (1073, 0, 1073),
        {(11, 2, 1073): [(1048, 3, 1073)],
         (11, 7, 1073): [(1048, 8, 1073)],
         (12, 5, 1073): [(1048, 6, 1073)],
         (12, 9, 1073): [(None, '-', 1073)],
         (12, 12, 1073): [(1048, 13, 1073)],
         (12, 14, 1073): [(None, '-', 1073)],
         (1048, 1, 1073): [(11, 2, 1073)],
         (1048, 3, 1073): [(12, 5, 1073),
                           (1081, 4, 1073),
                           (None, '-', 1073),
                           (12, 9, 1073)],
         (1048, 6, 1073): [(11, 7, 1073)],
         (1048, 8, 1073): [(12, 5, 1073), (None, '-', 1073), (12, 9, 1073)],
         (1048, 10, 1073): [(1081, 11, 1073),
                            (12, 14, 1073),
                            (12, 12, 1073),
                            (None, '-', 1073)],
         (1048, 13, 1073): [(None, '-', 1073),
                            (12, 14, 1073),
                            (12, 12, 1073)],
         (1073, 0, 1073): [(1048, 1, 1073), (1048, 10, 1073)],
         (1081, 4, 1073): [(None, '-', 1073)],
         (1081, 11, 1073): [(None, '-', 1073)]}],
 1074: ["classdef: 'class' NAME ['(' [testlist] ')'] ':' suite",
        (1074, 0, 1074),
        {(1, 2, 1074): [(7, 3, 1074), (11, 6, 1074)],
         (7, 3, 1074): [(1071, 4, 1074), (8, 5, 1074)],
         (8, 5, 1074): [(11, 6, 1074)],
         (11, 6, 1074): [(1044, 7, 1074)],
         (511, 1, 1074): [(1, 2, 1074)],
         (1044, 7, 1074): [(None, '-', 1074)],
         (1071, 4, 1074): [(8, 5, 1074)],
         (1074, 0, 1074): [(511, 1, 1074)]}],
 1075: ["arglist: ( argument ',')* ( argument [','] | '*' test (',' argument)* [',' '**' test] | '**' test)",
        (1075, 0, 1075),
        {(12, 2, 1075): [(16, 5, 1075),
                         (1076, 1, 1075),
                         (1076, 3, 1075),
                         (36, 12, 1075)],
         (12, 4, 1075): [(None, '-', 1075)],
         (12, 7, 1075): [(1076, 8, 1075)],
         (12, 9, 1075): [(36, 10, 1075)],
         (16, 5, 1075): [(1048, 6, 1075)],
         (36, 10, 1075): [(1048, 11, 1075)],
         (36, 12, 1075): [(1048, 13, 1075)],
         (1048, 6, 1075): [(12, 7, 1075), (12, 9, 1075), (None, '-', 1075)],
         (1048, 11, 1075): [(None, '-', 1075)],
         (1048, 13, 1075): [(None, '-', 1075)],
         (1075, 0, 1075): [(16, 5, 1075),
                           (1076, 1, 1075),
                           (1076, 3, 1075),
                           (36, 12, 1075)],
         (1076, 1, 1075): [(12, 2, 1075)],
         (1076, 3, 1075): [(None, '-', 1075), (12, 4, 1075)],
         (1076, 8, 1075): [(12, 7, 1075), (12, 9, 1075), (None, '-', 1075)]}],
 1076: ["argument: test [comp_for] | test '=' test",
        (1076, 0, 1076),
        {(22, 4, 1076): [(1048, 5, 1076)],
         (1048, 1, 1076): [(1081, 2, 1076), (None, '-', 1076)],
         (1048, 3, 1076): [(22, 4, 1076)],
         (1048, 5, 1076): [(None, '-', 1076)],
         (1076, 0, 1076): [(1048, 3, 1076), (1048, 1, 1076)],
         (1081, 2, 1076): [(None, '-', 1076)]}],
 1077: ['list_iter: list_for | list_if',
        (1077, 0, 1077),
        {(1077, 0, 1077): [(1078, 1, 1077), (1079, 2, 1077)],
         (1078, 1, 1077): [(None, '-', 1077)],
         (1079, 2, 1077): [(None, '-', 1077)]}],
 1078: ["list_for: 'for' exprlist 'in' testlist_safe [list_iter]",
        (1078, 0, 1078),
        {(510, 3, 1078): [(1045, 4, 1078)],
         (513, 1, 1078): [(1070, 2, 1078)],
         (1045, 4, 1078): [(None, '-', 1078), (1077, 5, 1078)],
         (1070, 2, 1078): [(510, 3, 1078)],
         (1077, 5, 1078): [(None, '-', 1078)],
         (1078, 0, 1078): [(513, 1, 1078)]}],
 1079: ["list_if: 'if' old_test [list_iter]",
        (1079, 0, 1079),
        {(516, 1, 1079): [(1046, 2, 1079)],
         (1046, 2, 1079): [(None, '-', 1079), (1077, 3, 1079)],
         (1077, 3, 1079): [(None, '-', 1079)],
         (1079, 0, 1079): [(516, 1, 1079)]}],
 1080: ['comp_iter: comp_for | comp_if',
        (1080, 0, 1080),
        {(1080, 0, 1080): [(1081, 1, 1080), (1082, 2, 1080)],
         (1081, 1, 1080): [(None, '-', 1080)],
         (1082, 2, 1080): [(None, '-', 1080)]}],
 1081: ["comp_for: 'for' exprlist 'in' or_test [comp_iter]",
        (1081, 0, 1081),
        {(510, 3, 1081): [(1049, 4, 1081)],
         (513, 1, 1081): [(1070, 2, 1081)],
         (1049, 4, 1081): [(None, '-', 1081), (1080, 5, 1081)],
         (1070, 2, 1081): [(510, 3, 1081)],
         (1080, 5, 1081): [(None, '-', 1081)],
         (1081, 0, 1081): [(513, 1, 1081)]}],
 1082: ["comp_if: 'if' old_test [comp_iter]",
        (1082, 0, 1082),
        {(516, 1, 1082): [(1046, 2, 1082)],
         (1046, 2, 1082): [(1080, 3, 1082), (None, '-', 1082)],
         (1080, 3, 1082): [(None, '-', 1082)],
         (1082, 0, 1082): [(516, 1, 1082)]}],
 1083: ["testlist1: test (',' test)*",
        (1083, 0, 1083),
        {(12, 2, 1083): [(1048, 3, 1083)],
         (1048, 1, 1083): [(12, 2, 1083), (None, '-', 1083)],
         (1048, 3, 1083): [(12, 2, 1083), (None, '-', 1083)],
         (1083, 0, 1083): [(1048, 1, 1083)]}],
 1084: ['encoding_decl: NAME',
        (1084, 0, 1084),
        {(1, 1, 1084): [(None, '-', 1084)], (1084, 0, 1084): [(1, 1, 1084)]}],
 1085: ["yield_expr: 'yield' [testlist]",
        (1085, 0, 1085),
        {(528, 1, 1085): [(None, '-', 1085), (1071, 2, 1085)],
         (1071, 2, 1085): [(None, '-', 1085)],
         (1085, 0, 1085): [(528, 1, 1085)]}]}

# expansion targets:

expanded  = {}

# reachables:

reachables = {1000: set([1,
            2,
            3,
            4,
            7,
            9,
            14,
            15,
            25,
            26,
            32,
            50,
            503,
            504,
            505,
            506,
            507,
            511,
            512,
            513,
            514,
            516,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            526,
            527,
            528,
            530,
            531,
            1003,
            1004,
            1005,
            1006,
            1012,
            1013,
            1014,
            1016,
            1017,
            1018,
            1019,
            1020,
            1021,
            1022,
            1023,
            1024,
            1025,
            1026,
            1027,
            1033,
            1034,
            1035,
            1036,
            1037,
            1038,
            1039,
            1040,
            1041,
            1048,
            1049,
            1050,
            1051,
            1052,
            1054,
            1055,
            1056,
            1057,
            1058,
            1059,
            1060,
            1061,
            1062,
            1065,
            1071,
            1074,
            1085]),
 1001: set([0,
            1,
            2,
            3,
            4,
            7,
            9,
            14,
            15,
            25,
            26,
            32,
            50,
            503,
            504,
            505,
            506,
            507,
            511,
            512,
            513,
            514,
            516,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            526,
            527,
            528,
            530,
            531,
            1003,
            1004,
            1005,
            1006,
            1011,
            1012,
            1013,
            1014,
            1016,
            1017,
            1018,
            1019,
            1020,
            1021,
            1022,
            1023,
            1024,
            1025,
            1026,
            1027,
            1033,
            1034,
            1035,
            1036,
            1037,
            1038,
            1039,
            1040,
            1041,
            1048,
            1049,
            1050,
            1051,
            1052,
            1054,
            1055,
            1056,
            1057,
            1058,
            1059,
            1060,
            1061,
            1062,
            1065,
            1071,
            1074,
            1085]),
 1002: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1071]),
 1003: set([50]),
 1004: set([50, 1003]),
 1005: set([50, 1003, 1004]),
 1006: set([506]),
 1007: set([7]),
 1008: set([1, 7, 16, 36, 1009]),
 1009: set([1, 7]),
 1010: set([1, 7, 1009]),
 1011: set([1,
            2,
            3,
            7,
            9,
            14,
            15,
            25,
            26,
            32,
            50,
            503,
            504,
            505,
            506,
            507,
            511,
            512,
            513,
            514,
            516,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            526,
            527,
            528,
            530,
            531,
            1003,
            1004,
            1005,
            1006,
            1012,
            1013,
            1014,
            1016,
            1017,
            1018,
            1019,
            1020,
            1021,
            1022,
            1023,
            1024,
            1025,
            1026,
            1027,
            1033,
            1034,
            1035,
            1036,
            1037,
            1038,
            1039,
            1040,
            1041,
            1048,
            1049,
            1050,
            1051,
            1052,
            1054,
            1055,
            1056,
            1057,
            1058,
            1059,
            1060,
            1061,
            1062,
            1065,
            1071,
            1074,
            1085]),
 1012: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 504, 505, 507, 512, 514, 519, 520, 521, 522, 523, 524, 526, 527, 528, 530, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1071, 1085]),
 1013: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 504, 505, 507, 512, 514, 519, 520, 521, 522, 523, 524, 526, 527, 528, 530, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1071, 1085]),
 1014: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1071]),
 1015: set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49]),
 1016: set([523]),
 1017: set([530]),
 1018: set([520]),
 1019: set([521, 522, 524, 526, 528, 1020, 1021, 1022, 1023, 1024, 1085]),
 1020: set([526]),
 1021: set([521]),
 1022: set([522]),
 1023: set([528, 1085]),
 1024: set([524]),
 1025: set([504, 505, 1026, 1027]),
 1026: set([504]),
 1027: set([505]),
 1028: set([1]),
 1029: set([1, 1032]),
 1030: set([1, 1028]),
 1031: set([1, 1029, 1032]),
 1032: set([1]),
 1033: set([527]),
 1034: set([519]),
 1035: set([512]),
 1036: set([50, 503, 506, 511, 513, 516, 518, 531, 1003, 1004, 1005, 1006, 1037, 1038, 1039, 1040, 1041, 1074]),
 1037: set([516]),
 1038: set([531]),
 1039: set([513]),
 1040: set([503]),
 1041: set([518]),
 1042: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1043: set([525]),
 1044: set([1, 2, 3, 4, 7, 9, 14, 15, 25, 26, 32, 504, 505, 507, 512, 514, 519, 520, 521, 522, 523, 524, 526, 527, 528, 530, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1071, 1085]),
 1045: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1046: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1047: set([514]),
 1048: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1049: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1050: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1051: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1052: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1053: set([20, 21, 28, 29, 30, 31, 507, 508, 509, 510]),
 1054: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1055: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1056: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1057, 1058, 1059, 1060, 1061, 1062]),
 1057: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1058, 1059, 1060, 1061, 1062]),
 1058: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1059, 1060, 1061, 1062]),
 1059: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1060, 1061, 1062]),
 1060: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1061, 1062]),
 1061: set([1, 2, 3, 7, 9, 25, 26, 1062]),
 1062: set([1, 2, 3, 7, 9, 25, 26]),
 1063: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1064: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1065: set([514]),
 1066: set([7, 9, 23]),
 1067: set([1, 2, 3, 7, 9, 11, 14, 15, 23, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1068]),
 1068: set([1, 2, 3, 7, 9, 11, 14, 15, 23, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1069: set([11]),
 1070: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062]),
 1071: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1072: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1073: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1074: set([511]),
 1075: set([1, 2, 3, 7, 9, 14, 15, 16, 25, 26, 32, 36, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1076]),
 1076: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1077: set([513, 516, 1078, 1079]),
 1078: set([513]),
 1079: set([516]),
 1080: set([513, 516, 1081, 1082]),
 1081: set([513]),
 1082: set([516]),
 1083: set([1, 2, 3, 7, 9, 14, 15, 25, 26, 32, 507, 514, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065]),
 1084: set([1]),
 1085: set([528])}

# terminals:

terminals  = set([0,
     1,
     2,
     3,
     4,
     5,
     6,
     7,
     8,
     9,
     10,
     11,
     12,
     13,
     14,
     15,
     16,
     17,
     18,
     19,
     20,
     21,
     22,
     23,
     24,
     25,
     26,
     27,
     28,
     29,
     30,
     31,
     32,
     33,
     34,
     35,
     36,
     37,
     38,
     39,
     40,
     41,
     42,
     43,
     44,
     45,
     46,
     47,
     48,
     49,
     50,
     500,
     501,
     502,
     503,
     504,
     505,
     506,
     507,
     508,
     509,
     510,
     511,
     512,
     513,
     514,
     515,
     516,
     517,
     518,
     519,
     520,
     521,
     522,
     523,
     524,
     525,
     526,
     527,
     528,
     529,
     530,
     531])

# terminal ancestors:

ancestors  = {0: set([1001]),
 1: set([1000, 1001, 1002, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1028, 1029, 1030, 1031, 1032, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083, 1084]),
 2: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 3: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 4: set([1000, 1001, 1044]),
 7: set([1000, 1001, 1002, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 9: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 11: set([1067, 1068, 1069]),
 14: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 15: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 16: set([1008, 1075]),
 20: set([1053]),
 21: set([1053]),
 23: set([1066, 1067, 1068]),
 25: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 26: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 28: set([1053]),
 29: set([1053]),
 30: set([1053]),
 31: set([1053]),
 32: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1083]),
 36: set([1008, 1075]),
 37: set([1015]),
 38: set([1015]),
 39: set([1015]),
 40: set([1015]),
 41: set([1015]),
 42: set([1015]),
 43: set([1015]),
 44: set([1015]),
 45: set([1015]),
 46: set([1015]),
 47: set([1015]),
 49: set([1015]),
 50: set([1000, 1001, 1003, 1004, 1005, 1011, 1036]),
 503: set([1000, 1001, 1011, 1036, 1040]),
 504: set([1000, 1001, 1011, 1012, 1013, 1025, 1026, 1044]),
 505: set([1000, 1001, 1011, 1012, 1013, 1025, 1027, 1044]),
 506: set([1000, 1001, 1006, 1011, 1036]),
 507: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1053, 1063, 1064, 1067, 1068, 1071, 1072, 1073, 1075, 1076, 1083]),
 508: set([1053]),
 509: set([1053]),
 510: set([1053]),
 511: set([1000, 1001, 1011, 1036, 1074]),
 512: set([1000, 1001, 1011, 1012, 1013, 1035, 1044]),
 513: set([1000, 1001, 1011, 1036, 1039, 1077, 1078, 1080, 1081]),
 514: set([1000, 1001, 1002, 1011, 1012, 1013, 1014, 1042, 1044, 1045, 1046, 1047, 1048, 1063, 1064, 1065, 1067, 1068, 1071, 1072, 1073, 1075, 1076, 1083]),
 516: set([1000, 1001, 1011, 1036, 1037, 1077, 1079, 1080, 1082]),
 518: set([1000, 1001, 1011, 1036, 1041]),
 519: set([1000, 1001, 1011, 1012, 1013, 1034, 1044]),
 520: set([1000, 1001, 1011, 1012, 1013, 1018, 1044]),
 521: set([1000, 1001, 1011, 1012, 1013, 1019, 1021, 1044]),
 522: set([1000, 1001, 1011, 1012, 1013, 1019, 1022, 1044]),
 523: set([1000, 1001, 1011, 1012, 1013, 1016, 1044]),
 524: set([1000, 1001, 1011, 1012, 1013, 1019, 1024, 1044]),
 525: set([1043]),
 526: set([1000, 1001, 1011, 1012, 1013, 1019, 1020, 1044]),
 527: set([1000, 1001, 1011, 1012, 1013, 1033, 1044]),
 528: set([1000, 1001, 1011, 1012, 1013, 1019, 1023, 1044, 1085]),
 530: set([1000, 1001, 1011, 1012, 1013, 1017, 1044]),
 531: set([1000, 1001, 1011, 1036, 1038])}

# last set:

last_set  = {1000: set([4, 1012]),
 1001: set([0]),
 1002: set([0]),
 1003: set([4]),
 1004: set([4, 1003]),
 1005: set([4, 6, 1006, 1012, 1044, 1074]),
 1006: set([4, 6, 1012, 1044]),
 1007: set([8]),
 1008: set([1, 2, 3, 8, 10, 12, 25, 27, 1009, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1009: set([1, 8]),
 1010: set([1, 8, 12, 1009]),
 1011: set([4, 6, 1005, 1006, 1012, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1074]),
 1012: set([4]),
 1013: set([1, 2, 3, 8, 10, 12, 16, 25, 27, 520, 521, 522, 523, 524, 526, 528, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1071, 1085]),
 1014: set([1, 2, 3, 8, 10, 12, 25, 27, 528, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1071, 1085]),
 1015: set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49]),
 1016: set([1, 2, 3, 8, 10, 12, 25, 27, 523, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1017: set([1, 2, 3, 8, 10, 12, 25, 27, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1070]),
 1018: set([520]),
 1019: set([1, 2, 3, 8, 10, 12, 25, 27, 521, 522, 524, 526, 528, 1020, 1021, 1022, 1023, 1024, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1071, 1085]),
 1020: set([526]),
 1021: set([521]),
 1022: set([1, 2, 3, 8, 10, 12, 25, 27, 522, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1071]),
 1023: set([1, 2, 3, 8, 10, 12, 25, 27, 528, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1071, 1085]),
 1024: set([1, 2, 3, 8, 10, 25, 27, 524, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1025: set([1, 8, 12, 16, 1026, 1027, 1028, 1029, 1030, 1031, 1032]),
 1026: set([1, 1029, 1031, 1032]),
 1027: set([1, 8, 12, 16, 1028, 1030]),
 1028: set([1]),
 1029: set([1, 1032]),
 1030: set([1, 12, 1028]),
 1031: set([1, 1029, 1032]),
 1032: set([1]),
 1033: set([1]),
 1034: set([1, 2, 3, 8, 10, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1035: set([1, 2, 3, 8, 10, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1036: set([4, 6, 1005, 1006, 1012, 1037, 1038, 1039, 1040, 1041, 1044, 1074]),
 1037: set([4, 6, 1012, 1044]),
 1038: set([4, 6, 1012, 1044]),
 1039: set([4, 6, 1012, 1044]),
 1040: set([4, 6, 1012, 1044]),
 1041: set([4, 6, 1012, 1044]),
 1042: set([1, 2, 3, 8, 10, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1043: set([1, 2, 3, 8, 10, 25, 27, 525, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1044: set([4, 6, 1012]),
 1045: set([1, 2, 3, 8, 10, 12, 25, 27, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1046: set([1, 2, 3, 8, 10, 25, 27, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1047: set([1046]),
 1048: set([1, 2, 3, 8, 10, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1049: set([1, 2, 3, 8, 10, 25, 27, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1050: set([1, 2, 3, 8, 10, 25, 27, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1051: set([1, 2, 3, 8, 10, 25, 27, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1052: set([1, 2, 3, 8, 10, 25, 27, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1053: set([20, 21, 28, 29, 30, 31, 507, 508, 509, 510]),
 1054: set([1, 2, 3, 8, 10, 25, 27, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1055: set([1, 2, 3, 8, 10, 25, 27, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1056: set([1, 2, 3, 8, 10, 25, 27, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1057: set([1, 2, 3, 8, 10, 25, 27, 1058, 1059, 1060, 1061, 1062, 1066]),
 1058: set([1, 2, 3, 8, 10, 25, 27, 1059, 1060, 1061, 1062, 1066]),
 1059: set([1, 2, 3, 8, 10, 25, 27, 1060, 1061, 1062, 1066]),
 1060: set([1, 2, 3, 8, 10, 25, 27, 1060, 1061, 1062, 1066]),
 1061: set([1, 2, 3, 8, 10, 25, 27, 1060, 1062, 1066]),
 1062: set([1, 2, 3, 8, 10, 25, 27]),
 1063: set([1, 2, 3, 8, 10, 12, 25, 27, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1077, 1078, 1079]),
 1064: set([1, 2, 3, 8, 10, 12, 25, 27, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1080, 1081, 1082]),
 1065: set([1048]),
 1066: set([1, 8, 10]),
 1067: set([1, 2, 3, 8, 10, 11, 12, 23, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1068, 1069]),
 1068: set([1, 2, 3, 8, 10, 11, 23, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1069]),
 1069: set([1, 2, 3, 8, 10, 11, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1070: set([1, 2, 3, 8, 10, 12, 25, 27, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066]),
 1071: set([1, 2, 3, 8, 10, 12, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1072: set([1, 2, 3, 8, 10, 12, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1073: set([1, 2, 3, 8, 10, 12, 25, 27, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1080, 1081, 1082]),
 1074: set([4, 6, 1012, 1044]),
 1075: set([1, 2, 3, 8, 10, 12, 25, 27, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1076, 1080, 1081, 1082]),
 1076: set([1, 2, 3, 8, 10, 25, 27, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1080, 1081, 1082]),
 1077: set([1, 2, 3, 8, 10, 25, 27, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1077, 1078, 1079]),
 1078: set([1, 2, 3, 8, 10, 12, 25, 27, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1077, 1078, 1079]),
 1079: set([1, 2, 3, 8, 10, 25, 27, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1077]),
 1080: set([1, 2, 3, 8, 10, 25, 27, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1080, 1081, 1082]),
 1081: set([1, 2, 3, 8, 10, 25, 27, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1080, 1081, 1082]),
 1082: set([1, 2, 3, 8, 10, 25, 27, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1080]),
 1083: set([1, 2, 3, 8, 10, 25, 27, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066]),
 1084: set([1]),
 1085: set([1, 2, 3, 8, 10, 12, 25, 27, 528, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1071])}

# symbols of:

symbols_of  = {1000: set([4, 1012, 1036]),
 1001: set([0, 4, 1011]),
 1002: set([0, 4, 1071]),
 1003: set([4, 7, 8, 50, 1032, 1075]),
 1004: set([1003]),
 1005: set([1004, 1006, 1074]),
 1006: set([1, 11, 506, 1007, 1044]),
 1007: set([7, 8, 1008]),
 1008: set([1, 12, 16, 22, 36, 1009, 1048]),
 1009: set([1, 7, 8, 1010]),
 1010: set([12, 1009]),
 1011: set([1012, 1036]),
 1012: set([4, 13, 1013]),
 1013: set([1014, 1016, 1017, 1018, 1019, 1025, 1033, 1034, 1035]),
 1014: set([22, 1015, 1071, 1085]),
 1015: set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49]),
 1016: set([12, 35, 523, 1048]),
 1017: set([530, 1070]),
 1018: set([520]),
 1019: set([1020, 1021, 1022, 1023, 1024]),
 1020: set([526]),
 1021: set([521]),
 1022: set([522, 1071]),
 1023: set([1085]),
 1024: set([12, 524, 1048]),
 1025: set([1026, 1027]),
 1026: set([504, 1031]),
 1027: set([7, 8, 16, 23, 504, 505, 1030, 1032]),
 1028: set([1, 500]),
 1029: set([1, 500, 1032]),
 1030: set([12, 1028]),
 1031: set([12, 1029]),
 1032: set([1, 23]),
 1033: set([1, 12, 527]),
 1034: set([12, 510, 519, 1048, 1054]),
 1035: set([12, 512, 1048]),
 1036: set([1005, 1006, 1037, 1038, 1039, 1040, 1041, 1074]),
 1037: set([11, 502, 515, 516, 1044, 1048]),
 1038: set([11, 502, 531, 1044, 1048]),
 1039: set([11, 502, 510, 513, 1044, 1070, 1071]),
 1040: set([11, 501, 502, 503, 1043, 1044]),
 1041: set([11, 12, 518, 1042, 1044]),
 1042: set([500, 1048, 1054]),
 1043: set([12, 500, 525, 1048]),
 1044: set([4, 5, 6, 1011, 1012]),
 1045: set([12, 1046]),
 1046: set([1047, 1049]),
 1047: set([11, 514, 1008, 1046]),
 1048: set([502, 516, 1049, 1065]),
 1049: set([517, 1050]),
 1050: set([529, 1051]),
 1051: set([507, 1052]),
 1052: set([1053, 1054]),
 1053: set([20, 21, 28, 29, 30, 31, 507, 508, 509, 510]),
 1054: set([18, 1055]),
 1055: set([33, 1056]),
 1056: set([19, 1057]),
 1057: set([34, 35, 1058]),
 1058: set([14, 15, 1059]),
 1059: set([16, 17, 24, 48, 1060]),
 1060: set([14, 15, 32, 1061]),
 1061: set([36, 1060, 1062, 1066]),
 1062: set([1, 2, 3, 7, 8, 9, 10, 25, 26, 27, 1063, 1064, 1073, 1083, 1085]),
 1063: set([12, 1048, 1078]),
 1064: set([12, 1048, 1081]),
 1065: set([11, 514, 1008, 1048]),
 1066: set([1, 7, 8, 9, 10, 23, 1067, 1075]),
 1067: set([12, 1068]),
 1068: set([11, 23, 1048, 1069]),
 1069: set([11, 1048]),
 1070: set([12, 1054]),
 1071: set([12, 1048]),
 1072: set([11, 12, 1048]),
 1073: set([11, 12, 1048, 1081]),
 1074: set([1, 7, 8, 11, 511, 1044, 1071]),
 1075: set([12, 16, 36, 1048, 1076]),
 1076: set([22, 1048, 1081]),
 1077: set([1078, 1079]),
 1078: set([510, 513, 1045, 1070, 1077]),
 1079: set([516, 1046, 1077]),
 1080: set([1081, 1082]),
 1081: set([510, 513, 1049, 1070, 1080]),
 1082: set([516, 1046, 1080]),
 1083: set([12, 1048]),
 1084: set([1]),
 1085: set([528, 1071])}

# keywords:

keywords  = {'<>': 509,
 'and': 529,
 'as': 500,
 'assert': 512,
 'break': 526,
 'class': 511,
 'continue': 521,
 'def': 506,
 'del': 530,
 'elif': 515,
 'else': 502,
 'except': 525,
 'exec': 519,
 'finally': 501,
 'for': 513,
 'from': 505,
 'global': 527,
 'if': 516,
 'import': 504,
 'in': 510,
 'is': 508,
 'lambda': 514,
 'not': 507,
 'or': 517,
 'pass': 520,
 'print': 523,
 'raise': 524,
 'return': 522,
 'try': 503,
 'while': 531,
 'with': 518,
 'yield': 528}

# start symbols:

start_symbols  = (1001, set([1000, 1001, 1002, 1072, 1084]))

