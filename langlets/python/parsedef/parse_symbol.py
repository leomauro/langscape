#  This file is automatically generated; change it on your own risk!

#--begin constants--

single_input = 1000
file_input = 1001
eval_input = 1002
decorator = 1003
decorators = 1004
decorated = 1005
funcdef = 1006
parameters = 1007
varargslist = 1008
fpdef = 1009
fplist = 1010
stmt = 1011
simple_stmt = 1012
small_stmt = 1013
expr_stmt = 1014
augassign = 1015
print_stmt = 1016
del_stmt = 1017
pass_stmt = 1018
flow_stmt = 1019
break_stmt = 1020
continue_stmt = 1021
return_stmt = 1022
yield_stmt = 1023
raise_stmt = 1024
import_stmt = 1025
import_name = 1026
import_from = 1027
import_as_name = 1028
dotted_as_name = 1029
import_as_names = 1030
dotted_as_names = 1031
dotted_name = 1032
global_stmt = 1033
exec_stmt = 1034
assert_stmt = 1035
compound_stmt = 1036
if_stmt = 1037
while_stmt = 1038
for_stmt = 1039
try_stmt = 1040
with_stmt = 1041
with_item = 1042
except_clause = 1043
suite = 1044
testlist_safe = 1045
old_test = 1046
old_lambdef = 1047
test = 1048
or_test = 1049
and_test = 1050
not_test = 1051
comparison = 1052
comp_op = 1053
expr = 1054
xor_expr = 1055
and_expr = 1056
shift_expr = 1057
arith_expr = 1058
term = 1059
factor = 1060
power = 1061
atom = 1062
listmaker = 1063
testlist_comp = 1064
lambdef = 1065
trailer = 1066
subscriptlist = 1067
subscript = 1068
sliceop = 1069
exprlist = 1070
testlist = 1071
dictmaker = 1072
dictorsetmaker = 1073
classdef = 1074
arglist = 1075
argument = 1076
list_iter = 1077
list_for = 1078
list_if = 1079
comp_iter = 1080
comp_for = 1081
comp_if = 1082
testlist1 = 1083
encoding_decl = 1084
yield_expr = 1085

#--end constants--

tok_name = sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name

del _name
del _value
